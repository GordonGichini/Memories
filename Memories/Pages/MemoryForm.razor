

@page "/memoryform/{id}"
@using Memories.Shared
@inject Services.IMemoryService MemoryService
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager

<h3 class="mt-4 mb-3">@((MemoryId.HasValue ? "Edit" : "Add"))Memory</h3>

@if (Memory != null)
{
    <form>
        <div class="form-group">
            <label for="name">Name:</label>
            <input class="form-control" id="name" @bind="Memory.Name" />
        </div>
        <div class="form-group">
            <label for="description">Description:</label>
            <textarea class="form-control" id="description" @bind="Memory.Description"></textarea>
        </div>
        <div class="form-group">
            <label for="date">Date:</label>
            <input type="date" class="form-control" id="date" @bind="Memory.Date" />
        </div>
        <div class="form-group">
            <label for="location">Location:</label>
            <input class="form-control" id="location" @bind="Memory.Location" />
        </div>
        <button type="button" class="btn btn-primary" @onclick="SaveMemory">Save</button>
    </form>
}
else
{
    <p>Loading...</p>
}

@code {
    private Memory Memory;

    [Parameter]
    public int? MemoryId { get; set; }

    protected override void OnInitialized()
    {
        if (MemoryId.HasValue)
        {
            Memory = MemoryService.GetMemoryById(MemoryId.Value);
        }
        else
        {
            Memory = new Memory();
        }
    }

    private void SaveMemory()
    {
        if (MemoryId.HasValue)
        {
            MemoryService.UpdateMemory(MemoryId.Value, Memory);
        }
        else
        {
            MemoryService.AddMemory(Memory);
        }

        // Redirect to memory list page
        NavigationManager.NavigateTo("/memories");
    }
}

